<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="11.5.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced
fontfamily=Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>5</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>500</y>
      <w>255</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Player : public PhysicalObject
--
//public:
 //Constructor(s)
Player();
 
 //Destructor
virtual ~Player();
 
 //Copy constructor
 
 //Overloaded Operators
 
 //General
 
 //Getters
float GetKamikazeVelocity() const;
float GetKamikazeAcceleration() const;
 
 //Setters
void SetKamikazeVelocity(float kamikazeVelocity);
void SetKamikazeAcceleration(float kamikazeAcceleration);
--
float mkKamikazeVelocity;
float mkKamikazeAcceleration;
--
 //Notes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>800</x>
      <y>500</y>
      <w>210</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Projectile : public PhysicalObject
--
//public:
 //Constructor(s)
Projectile();
 
 //Destructor
virtual ~Projectile();
 
 //Copy constructor
 
 //Overloaded Operators
 
 //General
 
 //Getters
int GetDamage() const;
int GetExplosiveRadius() const;
 
 //Setters
void SetDamage(int damage);
void SetExplosiveRadius(float explosiveRadius);
--
 //Member Variables
int mDamage;
float mExplosiveRadius;
--
 //Notes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>500</x>
      <y>0</y>
      <w>245</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>PhysicalObject
--
//public:
 //Constructor(s)
PhysicalObject();
 
 //Destructor
virtual ~PhysicalObject();
 
 //Copy constructor
 
 //Overloaded Operators
 
 //General
 
 //Getters
Vector2 GetPosition() const;
Vector2 GetOrientation() const;
Vector2 GetVelocity() const;
float GetMaximumVelocity() const;
Vector2 GetAcceleration() const;
float GetMaximumAcceleration() const;
float GetMass() const;
int GetHealth() const;
int GetState() const;
CTexture* GetTexture() const;
 
 //Setters
void SetPosition(Vector2 position);
void SetOrientation(Vector2 orientation);
void SetVelocity(Vector2 velocity);
void SetMaximumVelocity(float maximumVelocity);
void SetAcceleration(Vector2 acceleration);
void SetMaximumAcceleration(float maximumAcceleration);
void SetMass(float mass);
void SetHealth(int health);
void SetState(int state);
--
//private:
Vector2 mPosition;
Vector2 mOrientation;
Vector2 mVelocity;
float mkMaximumVelocity;
Vector2 mAcceleration;
float mMaximumAcceleration;
float mMass;
int mHealth;
int mState;
CTexture mpTexture;
--
/*
Orientation is used instead of angle so that 3D affects
can be applied such as corner banking
*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>115</x>
      <y>425</y>
      <w>519</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;75;15;40;510;40;510;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>610</x>
      <y>425</y>
      <w>274</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>265;75;265;40;15;40;15;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>290</x>
      <y>500</y>
      <w>145</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Enemy : public PhysicalObject
--
//public:
 //Constructor(s)
Enemy();
 
 //Destructor
virtual ~Enemy();
 
 //Copy constructor
 
 //Overloaded Operators
 
 //General
 
 //Getters
 
 //Setters
--
 //Member Variables
--
 //Notes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>345</x>
      <y>425</y>
      <w>289</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>15;75;15;40;280;40;280;15</additional_attributes>
  </element>
</diagram>
